load("@s7_tools//src:RULES.bzl", "clibgen")
load("@makeheaders//src:RULES.bzl", "makeheaders")

load("//:MODULE.bzl",
     "LIBS7_VERSION",
     # "LIBLOGC_VERSION",
     "TOML_S7_VERSION", "LIBTOML_CC_VERSION")

load("//config/cc:BUILD.bzl",
     "BASE_SRCS", "BASE_DEPS",
     "BASE_COPTS", "BASE_INCLUDE_PATHS",
     "BASE_DEFINES", "BASE_LINKOPTS")

DEPS = BASE_DEPS + ["@libtoml_cc//:toml"]
SRCS = BASE_SRCS
INCLUDE_PATHS = BASE_INCLUDE_PATHS + [
    "-I$(GENDIR)/src",
    "-I$(GENDIR)/external/toml_s7~{}/src".format(TOML_S7_VERSION),
    "-Iexternal/libtoml_cc~{}/include".format(LIBTOML_CC_VERSION),
]
COPTS         = BASE_COPTS + INCLUDE_PATHS

exports_files(["trace_dev.h"]) # for testing

################################################################
cc_library(
    name  = "toml_s7",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + ["libtoml_s7.c", ":mkhdrs"],
    hdrs = [":toml_s7.h"],
    deps  = DEPS + [
        # "@libs7//lib:utils", #FIXME: remove this dep
        ":toml_array",
        ":toml_datetime",
        ":toml_table",
    ],
    copts = COPTS + [
        # "-Iexternal/libs7~{}/lib".format(LIBS7_VERSION),
    ],
    visibility = ["//visibility:public"]
)

cc_shared_library(
    name  = "toml_s7_dso",
    shared_lib_name = select({
        "@platforms//os:macos": "libtoml_s7.dylib",
        "@platforms//os:linux": "libtoml_s7.so",
        # "@platforms//os:windows": "libtoml_s7.dll",
        "//conditions:default": "libtoml_s7.so"
    }),
    deps = [":toml_s7"],
    visibility = ["//visibility:public"]
)

# clibgen(
#     name = "plugin",
#     args = ["--script", "$(location libtoml_clibgen.scm)"],
#     srcs = [":libtoml_clibgen.scm"],
#     outs = [":libtoml_s7.c"]
# )

################################################################
cc_library(
    name  = "toml_array",
    linkstatic = True,
    alwayslink = True,
    srcs  = SRCS + [
        "toml_array_s7.c",
        ":mkhdrs",
    ],
    deps  = DEPS,
    copts = COPTS,
)

cc_library(
    name  = "toml_datetime",
    linkstatic = True,
    alwayslink = True,
    srcs  = [
        "toml_datetime_s7.c",
        ":mkhdrs",
    ],
    deps  = DEPS,
    copts = COPTS,
)

cc_library(
    name  = "toml_table",
    linkstatic = True,
    alwayslink = True,
    srcs  = [
        "toml_table_s7.c",
        ":mkhdrs"
    ],
    deps  = DEPS,
    copts = COPTS,
)

################################################################
makeheaders(
    name = "mkhdrs",
    hdrs_srcs = [
        "libtoml_s7.c",
        "toml_array_s7.c",
        "toml_datetime_s7.c",
        "toml_table_s7.c"
    ],
    additional_srcs = select({
        "//config/profile:dev?": [
            ":ansi_colors.h",
            ":trace_dev.h"
        ],
        "//conditions:default": [
            ":trace_prod.h"
        ]
    })
)

makeheaders(
    name = "export_hdr",
    out  = "toml_s7.h",
    export_interface = True,
    hdrs_srcs = [
        "libtoml_s7.c",
        "toml_array_s7.c",
        "toml_datetime_s7.c",
        "toml_table_s7.c"
    ],
    additional_srcs = select({
        "//config/profile:dev?": [
            ":ansi_colors.h",
            ":trace_dev.h"
        ],
        "//conditions:default": [
            ":trace_prod.h"
        ]
    })
)
